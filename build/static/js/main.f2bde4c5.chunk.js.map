{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","src","FormControl","Input","placeholder","value","onChange","event","target","IconButton","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAmBeA,EAhBDC,sBAAW,WAAoBC,GAAO,IAAzBC,EAAwB,EAAxBA,QACjBC,EADyC,EAAhBC,WACPF,EAAQE,SAChC,OACI,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,iBAA/C,SACI,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAS,oBAAqB,qBAA/C,SACI,cAACI,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAYC,MAAM,QAAQC,QAAQ,KAClCC,UAAU,KADV,WAELR,GAAD,UAAcD,EAAQE,UAAU,eAAhC,MAFM,IAE+CF,EAAQA,oB,QCA5DU,EAVGC,IAASC,cAAc,CACrCC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAEEC,Y,iCCkDNC,MAlDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA6BJ,mBAAS,IAAtC,mBAAOpB,EAAP,KAAgByB,EAAhB,KAoBA,OAlBFC,qBAAU,WACNlB,EAAGmB,WAAW,YAAYC,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC/DN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAG,CAACC,GAAID,EAAIC,GAAIpC,QAASmC,EAAIE,iBAElE,IAEAT,qBAAU,WACRD,EAAYW,OAAO,6BAClB,IAWD,sBAAKnC,UAAU,MAAf,UACE,qBAAKoC,IAAI,+FACT,yDACA,0CAAarC,KACb,sBAAMC,UAAU,YAAhB,SACE,eAACqC,EAAA,EAAD,CAAarC,UAAU,mBAAvB,UACE,cAACsC,EAAA,EAAD,CAAOtC,UAAU,aAAauC,YAAY,qBAAqBC,MAAOpB,EAAOqB,SAAU,SAAAC,GAAK,OAAIrB,EAASqB,EAAMC,OAAOH,UAExH,cAACI,EAAA,EAAD,CAAY5C,UAAU,kBAAkB6C,UAAWzB,EAAOf,QAAQ,YAAYD,MAAM,UAAU0C,KAAK,SAASC,QAlB9F,SAACL,GACnBA,EAAMM,iBACNzC,EAAGmB,WAAW,YAAYuB,IAAI,CAC5BpD,QAASuB,EACTrB,SAASA,EACTmD,UAAW1C,IAASS,UAAUkC,WAAWC,oBAE3C/B,EAAS,KAWL,SACE,cAAC,IAAD,WAMJ,cAAC,IAAD,UAEEC,EAASS,KAAI,gBAAEE,EAAF,EAAEA,GAAIpC,EAAN,EAAMA,QAAN,OACX,cAAC,EAAD,CAAkBE,SAAUA,EAAUF,QAASA,GAAjCoC,YCxCToB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f2bde4c5.chunk.js","sourcesContent":["import { Card,CardContent,Typography } from '@material-ui/core'\r\nimport React,{ forwardRef} from 'react'\r\nimport './Message.css';\r\nconst Message=forwardRef(({message,username},ref)=>{\r\n    const isUser=username===message.username;\r\n    return (\r\n        <div ref={ref} className={`message ${isUser && 'message__user'}`}>\r\n            <Card className={isUser ? \"message__userCard\": \"message__guestCard\"}>\r\n                <CardContent>\r\n                    <Typography color=\"white\" variant=\"h5\"\r\n                    component=\"h2\">\r\n             {!isUser && `${message.username||'Unknown User'}: `} {message.message}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            </div>\r\n    )\r\n})\r\n\r\nexport default Message\r\n","import firebase from \"firebase\";\r\nconst firebaseApp=firebase.initializeApp({\r\n    apiKey: \"AIzaSyA3zOlfx8HHlOp8FgDH9jVLm0ue04w1Gjs\",\r\n    authDomain: \"messenger-clone-d5e14.firebaseapp.com\",\r\n    projectId: \"messenger-clone-d5e14\",\r\n    storageBucket: \"messenger-clone-d5e14.appspot.com\",\r\n    messagingSenderId: \"823940201302\",\r\n    appId: \"1:823940201302:web:5f630e0e108fa99a2734f7\",\r\n    measurementId: \"G-1GJVC0HJ5S\"\r\n});\r\nconst db=firebaseApp.firestore();\r\nexport default db;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Button, FormControl, InputLabel, Input } from '@material-ui/core';\nimport Message from \"./Message\";\nimport db from './firebase';\nimport firebase from 'firebase';\nimport  FlipMove from 'react-flip-move'\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [username,setUsername]=useState('');\n  \nuseEffect(()=>{\n    db.collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot=>{\n      setMessages(snapshot.docs.map(doc=>({id: doc.id, message: doc.data()})))\n    });\n},[])\n\n  useEffect(() => {\n    setUsername(prompt('Please enter your name'))\n  }, [])\n  const sendMessage = (event) => {\n    event.preventDefault();\n    db.collection('messages').add({\n      message: input,\n      username:username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput('');\n  }\n  return (\n    <div className=\"App\">\n      <img src=\"https://facebookbrand.com/wp-content/uploads/2018/09/Header-e1538151782912.png?w=100&h=100\"/>\n      <h1>Srimany Messenger Clone</h1>\n      <h3>Welcome {username}</h3>\n      <form className=\"app__form\">\n        <FormControl className=\"app__formControl\">\n          <Input className=\"app__input\" placeholder=\"Enter a Message...\" value={input} onChange={event => setInput(event.target.value)} />\n\n        <IconButton className=\"app__iconButton\" disabled={!input} variant=\"contained\" color=\"primary\" type=\"submit\" onClick={sendMessage}> \n          <SendIcon/>\n        </IconButton>\n        </FormControl>\n\n        {/* <input /> */}\n      </form>\n      <FlipMove>\n      {\n        messages.map(({id, message}) => (\n          <Message key={id} username={username} message={message} />\n        ))\n      }\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}